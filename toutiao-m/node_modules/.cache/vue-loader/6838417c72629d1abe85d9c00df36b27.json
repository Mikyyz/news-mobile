{"remainingRequest":"/Users/mikyyz/vue-trip/toutiao-m/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mikyyz/vue-trip/toutiao-m/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mikyyz/vue-trip/toutiao-m/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mikyyz/vue-trip/toutiao-m/src/views/my/index.vue?vue&type=template&id=7a3d5949&scoped=true&","dependencies":[{"path":"/Users/mikyyz/vue-trip/toutiao-m/src/views/my/index.vue","mtime":1602167939887},{"path":"/Users/mikyyz/vue-trip/toutiao-m/node_modules/cache-loader/dist/cjs.js","mtime":1599750694245},{"path":"/Users/mikyyz/vue-trip/toutiao-m/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1599750700770},{"path":"/Users/mikyyz/vue-trip/toutiao-m/node_modules/cache-loader/dist/cjs.js","mtime":1599750694245},{"path":"/Users/mikyyz/vue-trip/toutiao-m/node_modules/vue-loader/lib/index.js","mtime":1599750700770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}